openapi: 3.0.0
info:
  title: API de Gestión de Usuarios
  description: API para la gestión de usuarios, autenticación y operaciones relacionadas.
  version: "1.0.0"
servers:
  - url: http://localhost:3000
    description: Servidor de desarrollo local

paths:
  /usuarios:
    get:
      summary: Obtener todos los usuarios
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: Número de página
        - in: query
          name: perPage
          schema:
            type: integer
          description: Usuarios por página
      responses:
        '200':
          description: Lista de usuarios
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                  perPage:
                    type: integer
                  totalUsers:
                    type: integer
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/Usuario'
        '500':
          description: Error en el servidor

    post:
      summary: Agregar un nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
      responses:
        '200':
          description: Usuario agregado con éxito
        '400':
          description: Datos inválidos
        '500':
          description: Error en el servidor

  /usuarios/{id}:
    put:
      summary: Actualizar los datos de un usuario por ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID del usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                email:
                  type: string
      responses:
        '200':
          description: Datos de usuario actualizados con éxito
        '400':
          description: Datos inválidos
        '404':
          description: Usuario no encontrado
        '500':
          description: Error en el servidor

    delete:
      summary: Eliminar un usuario por ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID del usuario
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Usuario eliminado con éxito
        '400':
          description: ID de usuario no proporcionado
        '500':
          description: Error en el servidor

  /autenticacion/{id}:
    get:
      summary: Verificar la autenticación del usuario
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID del usuario
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Autenticación verificada con éxito
        '401':
          description: Usuario no autenticado

  /sesion:
    post:
      summary: Inicio de sesión de usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                contrasena:
                  type: string
      responses:
        '200':
          description: Inicio de sesión exitoso
        '400':
          description: Email y contraseña son obligatorios
        '401':
          description: Credenciales inválidas

  /usuarios/{id}/clave:
    put:
      summary: Actualizar la contraseña del usuario
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID del usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                contrasenaActual:
                  type: string
                nuevaContrasena:
                  type: string
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Contraseña actualizada con éxito
        '400':
          description: Todos los campos son obligatorios
        '401':
          description: Contraseña actual incorrecta
        '404':
          description: Usuario no encontrado
        '500':
          description: Error en el servidor

  /recuperacion_contra:
    post:
      summary: Solicitar recuperación de contraseña
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Token de recuperación generado

  /restablecimiento_contra:
    post:
      summary: Restablecer la contraseña
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                new_password:
                  type: string
                reset_token:
                  type: string
      responses:
        '200':
          description: Contraseña actualizada exitosamente
        '400':
          description: Token de recuperación inválido o expirado

  /health:
    get:
      summary: Verificar el estado general del servicio
      responses:
        '200':
          description: Servicio activo
        '500':
          description: Servicio inactivo

  /health/ready:
    get:
      summary: Verificar si el servicio está listo para manejar tráfico
      responses:
        '200':
          description: Servicio listo
        '500':
          description: Servicio no listo

  /health/live:
    get:
      summary: Verificar si el servicio está vivo
      responses:
        '200':
          description: Servicio vivo
        '500':
          description: Servicio no vivo

components:
  securitySchemes:
    BearerAuth: # Puedes poner el nombre que quieras aquí
      type: http
      scheme: bearer
      bearerFormat: JWT # Si estás utilizando tokens JWT
  schemas:
    Usuario:
      type: object
      properties:
        id:
          type: integer
        nombre:
          type: string
        contrasena:
          type: string
        email:
          type: string
